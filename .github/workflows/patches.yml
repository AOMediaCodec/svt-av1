name: Patches
on:
  push:
    paths-ignore:
      - "Docs/*"
      - .travis.yml
      - appveyor.yml
      - .gitignore
      - "*.md"
  pull_request:
    paths-ignore:
      - "Docs/*"
      - .travis.yml
      - appveyor.yml
      - .gitignore
      - "*.md"

jobs:
  ffmpeg-patch:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-18.04
            CC: gcc
            CXX: g++
          - os: macos-10.15
            CC: clang
            CXX: clang++
    runs-on: ${{ matrix.os }}
    env:
      CC: ccache ${{ matrix.CC }}
      CXX: ccache ${{ matrix.CXX }}
      # Seems macOS made it so you can't do anything in /usr except /usr/local even with root permissions
      LD_LIBRARY_PATH: /usr/local/lib
      PKG_CONFIG_PATH: /usr/local/lib/pkgconfig
    steps:
      - uses: actions/checkout@v2
      - name: Cache ccache files
        uses: actions/cache@v2
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-ffmpeg-${{ hashFiles('**/*.c') }}
          restore-keys: ${{ runner.os }}-ffmpeg-
      - name: Install dependencies (ubuntu)
        if: matrix.os == 'ubuntu-18.04'
        run: |
          sudo apt-get update &&
          sudo apt-get install -y yasm cmake ccache
      - name: Install dependencies (mac)
        if: matrix.os == 'macos-10.15'
        run: |
          brew update
          brew install yasm ccache pkg-config
      - name: Check dependencies
        run: |
          [ -d ~/.ccache ] && sudo chown -R "$USER": ~/.ccache
          echo "::set-env name=CCACHE_DIR::$HOME/.ccache"
          $CC --version
          yasm --version
          cmake --version
          ccache --version
      - name: Configure SVT-AV1
        run: cmake -S "$GITHUB_WORKSPACE" -B Build -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF
      - name: Build and install SVT-AV1
        run: sudo -E cmake --build Build --parallel 4 --target install
      - name: Clone FFmpeg
        uses: actions/checkout@v2
        with:
          repository: FFmpeg/FFmpeg
          ref: release/4.2
          path: ffmpeg-release-4.2
      - name: Patch FFmpeg
        run: git -C ffmpeg-release-4.2 apply "$GITHUB_WORKSPACE/ffmpeg_plugin/0001-Add-ability-for-ffmpeg-to-run-svt-av1.patch"
      - name: Configure FFmpeg
        run: |
          [ -d ~/.ccache ] && sudo chown -R "$USER": ~/.ccache
          if ! ./ffmpeg-release-4.2/configure --enable-libsvtav1 --cc="${CC:-ccache gcc}" --cxx="${CXX:-ccache g++}"; then
            less ffbuild/config.log
            exit 1
          fi
      - name: Build FFmpeg
        run: sudo -E make --quiet -j "$(getconf _NPROCESSORS_ONLN 2>/dev/null || sysctl -n hw.ncpu)" install
      - name: Download videos
        run: |
          for url in raw.githubusercontent.com/OpenVisualCloud/SVT-AV1-Resources/master randomderp.com; do
            curl -LO https://$url/video.tar.gz && break
          done
          tar xf video.tar.gz
      - name: Run ffmpeg
        run: ffmpeg -i akiyo_cif.y4m -c:v libsvt_av1 akiyo.webm

  gstreamer-patch:
    runs-on: ubuntu-18.04
    env:
      CC: ccache gcc
      CXX: ccache g++
    steps:
      - uses: actions/checkout@v2
      - name: Cache ccache files
        uses: actions/cache@v2
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-gstreamer-${{ hashFiles('**/*.c') }}
          restore-keys: ${{ runner.os }}-gstreamer-
      - name: Install dependencies
        run: |
          [ -d ~/.ccache ] && sudo chown -R "$USER": ~/.ccache
          sudo apt-get update
          sudo apt-get install -y yasm cmake ccache \
            libgstreamer{,-plugins-base}1.0-dev \
            gstreamer1.0-{tools,plugins-{good,bad}} \
            pkg-config \
            ninja-build \
            python3{,-{pip,setuptools,wheel}}
          pip3 install --user meson
          printf '%s\n' "::set-env name=CCACHE_DIR::$HOME/.ccache" \
            "::set-env name=PATH::$PATH:$HOME/.local/bin"
      - name: Configure SVT-AV1
        run: cmake -S "$GITHUB_WORKSPACE" -B Build -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=/usr
      - name: Build and install SVT-AV1
        run: sudo -E cmake --build Build --parallel 4 --target install
      - name: Configure Gstreamer plugin
        run: meson setup gstreamer-plugin/build gstreamer-plugin -Dprefix=/usr
      - name: Build Gstreamer plugin
        run: sudo -E ninja -C gstreamer-plugin/build install
      - name: Download videos
        run: |
          for url in raw.githubusercontent.com/OpenVisualCloud/SVT-AV1-Resources/master randomderp.com; do
            curl -LO https://$url/video.tar.gz && break
          done
          tar xf video.tar.gz
      - name: Run Gstreamer
        run: |
          gst-launch-1.0 -v filesrc location=akiyo_cif.y4m \
            ! y4mdec \
            ! svtav1enc \
            ! webmmux \
            ! filesink location=akiyo.mkv
